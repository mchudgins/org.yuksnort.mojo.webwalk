<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.yuksnort.mojo</groupId>
	<artifactId>webwalk</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>maven-plugin</packaging>

	<!-- The DST parent-pom has general, common 'stuff' for DST Research projects. -->
	<parent>
		<groupId>com.dstresearch</groupId>
		<artifactId>parent-pom</artifactId>
		<version>1.4.0</version>
	</parent>

	<!-- boot-strap our way to the parent pom -->
	<repositories>
		<repository>
			<id>releases</id>
			<name>Release Repository</name>
			<url>http://repo.dstresearch.com/releases</url>
		</repository>
		<repository>
			<id>snapshots</id>
			<name>Snapshot Repository</name>
			<url>http://repo.dstresearch.com/snapshots</url>
		</repository>
	</repositories>

	<!-- override of parent scm config -->
	<scm>
		<connection>scm:svn:https://svn.dstresearch.com/pub/ClassificationExtraction/service/trunk</connection>
		<developerConnection>scm:svn:https://svn.dstresearch.com/pub/ClassificationExtraction/service/trunk</developerConnection>
		<url>http://svn.dstresearch.com/ClassificationExtraction/pub/service/trunk</url>
	</scm>


	<distributionManagement>
		<site>
			<id>DSTResearch</id>
			<url>scp://dstresearch.com:/mnt/projects/ClassEx/${project.artifactId}-${project.version}</url>
		</site>
	</distributionManagement>

	<properties>
		<copyright>(C) 2012 by DST Systems, Inc. All rights reserved.</copyright>

		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
		<requireCleanSource>false</requireCleanSource>
		<!-- some basic stuff (DRY) -->
		<!-- over ride the value from the parent pom -->

		<!-- jetty config - used for dev/testing -->
		<jetty.version>8.1.7.v20120910</jetty.version>
		<jetty.port>9595</jetty.port>
		<jetty.stopPort>9696</jetty.stopPort>

	</properties>

	<build>
		<!-- application.properties needs filtering -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>*.xml</include>
					<include>*.properties</include>
				</includes>
			</resource>
		</resources>

		<!-- the jdbc.properties file needs filtering when testing -->
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>models/**</include>
				</includes>
			</testResource>
			<testResource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>*.xml</include>
					<include>*.properties</include>
				</includes>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.jvnet.jaxb2.maven2
										</groupId>
										<artifactId>
											maven-jaxb2-plugin
										</artifactId>
										<versionRange>
											[0.8.0,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>[${sql-plugin.version},)</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>3.0.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.7.1</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.11</version>
			<scope>test</scope>
		</dependency>

		<!-- slf4j is used by bval (squash its logs) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<!-- Spring will use the Jackson mapper when its on the classpath -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.10</version>
		</dependency>




	</dependencies>
</project>